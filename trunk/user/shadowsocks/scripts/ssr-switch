#!/bin/sh
#
# Copyright (C) 2017 openwrt-ssr
# Copyright (C) 2017 yushi studio <ywb94@qq.com>
# Copyright (C) 2019 chongshengB
#
# This is free software, licensed under the GNU General Public License v3.
# See /LICENSE for more information.
#

cycle_time=10
switch_time=3
normal_flag=0
server_locate=0
NAME=shadowsocksr
ENABLE_SERVER=nil
CONFIG_SWTICH_FILE=/tmp/${NAME}_t.json
server_count=0
[ -n "$2" ] && cycle_time=$2
[ -n "$3" ] && switch_time=$3

DEFAULT_SERVER=$(nvram get global_server)
CURRENT_SERVER=$DEFAULT_SERVER
BACKUP_SERVER=$(nvram get backup_server)

#判断代理是否正常
check_proxy() {
	/usr/bin/ss-check www.google.com  80 $switch_time 1
	if [ "$?" == "0" ]; then
		return 0
	else
		/usr/bin/ss-check www.baidu.com  80 $switch_time 1
		if [ "$?" == "0" ]; then
#goole不通baidu通则不正常
return 1
else
	return 2
fi
fi
return 0
}

a_start() {
while [ "1" = "1" ]  #死循环
do
	sleep $cycle_time
	LOGTIME=$(date "+%Y-%m-%d %H:%M:%S")
#判断当前代理是否正常
i=0
times=3
while [ $i -le $times ]
do
	check_proxy  
	current_ret=$?
	if [ "$?" == "0" ]; then
		break
	fi
	i=`expr $i + 1`
	sleep 20s
done

if [ "$current_ret" = "1" ] ;then
#当前代理错误，判断有无可用的服务器
if [ $(nvram get check_mode) = "1" ];then
	echo "$(date "+%Y-%m-%d %H:%M:%S") 备用服务器也故障了,请检测主备服务器是否正常！" >> /tmp/ssrplus.log
	/usr/bin/shadowsocks.sh stop &
	nvram set ss_enable=0
	nvram set check_mode=0
	exit 0
fi
echo "$(date "+%Y-%m-%d %H:%M:%S") 检测到主服务器故障，切换到备用服务器。" >> /tmp/ssrplus.log
/usr/bin/shadowsocks.sh reserver &
nvram set check_mode=1
fi


done
}

case $1 in
start)
    a_start
    ;;
stop)
    a_close
    ;;
*)
    echo "check"
#exit 0
    ;;
esac
